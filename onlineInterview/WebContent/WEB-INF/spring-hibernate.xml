<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:drools="http://drools.org/schema/drools-spring"
	xsi:schemaLocation="   
          http://www.springframework.org/schema/beans   
          http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
          http://www.springframework.org/schema/tx   
          http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
          http://www.springframework.org/schema/context   
          http://www.springframework.org/schema/context/spring-context-3.0.xsd   
          http://www.springframework.org/schema/aop   
          http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://drools.org/schema/drools-spring
          http://drools.org/schema/drools-spring.xsd" >

	<bean id="propertyConfigure" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
 		<property name="locations">
 			<list>
 				<value>WEB-INF/jdbc.properties</value>
 			</list>
 		</property>
 	</bean>
 	
 	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" 
    destroy-method="close">
      	<property name="driverClass" value="${c3p0.driverClass}"></property>  
	    <property name="jdbcUrl" value="${c3p0.url}"></property>  
	    <property name="user" value="${c3p0.user}"></property>  
	    <property name="password" value="${c3p0.password}"></property>  
	    <property name="initialPoolSize" value="${c3p0.initialPoolSize}"></property>  
	    <property name="maxIdleTime" value="${c3p0.maxIdleTime}"></property>  
	    <property name="maxPoolSize" value="${c3p0.maxPoolSize}"></property>  
	    <property name="minPoolSize" value="${c3p0.minPoolSize}"></property>  
   </bean>
	
	<!-- 以注解的方式配置session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource"></ref>
		</property>
		<property name="packagesToScan">
			<list>
				<value>edu.nju.onlineInterview.model.Account</value>
				<value>edu.nju.onlineInterview.model.Record</value>
				<value>edu.nju.onlineInterview.model.Student</value>
			</list>
		</property>
		<property name="hibernateProperties">
			 <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
            </props>
		</property>
		
        <property name="annotatedClasses">
        	<list>
        		<value>edu.nju.onlineInterview.model.Account</value>
        		<value>edu.nju.onlineInterview.model.Student</value>
        		<value>edu.nju.onlineInterview.model.Record</value>
        	</list>
        </property>
  </bean>
  
  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
  	<property name="sessionFactory" ref="sessionFactory">
  	</property>
  </bean>
  
   <tx:annotation-driven transaction-manager="transactionManager"/>
  <!--事务通知  -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="sav*" propagation="REQUIRED" rollback-for="Exception"/> <!-- rollback-for回滚事物，果存在一个事务，则支持当前事务。如果没有事务则开启  -->
            <tx:method name="del*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="add*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="upd*" propagation="REQUIRED" rollback-for="Exception"/>
            <tx:method name="qry*" propagation="REQUIRED" read-only="true"/> 
            <tx:method name="*" propagation="REQUIRED" read-only="true"/>
        </tx:attributes>  
    </tx:advice>
    <!-- 事务切入 -->
    <aop:config proxy-target-class="true">
        <aop:pointcut id="cut"
            expression="execution(* edu.nju.onlineInterview.dao.*.*(..))" />
        <aop:advisor advice-ref="txAdvice" pointcut-ref="cut" />
    </aop:config>
</beans>